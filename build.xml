<project name="FormattingTools" basedir="." xmlns:ivy="antlib:org.apache.ivy.ant" default="main">
	<description>
		Command line tools to perform several format transformations.
	</description>

    <property name="main-class"  value="it.csttech.formattingtools.UseChangeFormat"/>

    <property name="src.dir"     value="${basedir}/src"/>
    <property name="build.dir"   value="${basedir}/bin"/>
    <property name="doc.dir"     value="${basedir}/docs"/>
    <property name="lib.dir"     value="${basedir}/lib"/>
    <property name="classes.dir" value="${build.dir}"/>
    <property name="jar.dir"     value="${build.dir}/publish"/>
    <property name="cfg.dir"	 value="${basedir}/config"/>
    <property name="ivy.dep.file" value="${basedir}/dependencies.xml" />
	
	<!-- Bypass a warning -->
	<presetdef name="javac">
		<javac includeantruntime="false" />
	</presetdef>

	<property file="build.properties" />

	<!-- Define the ClassPath -->
    <path id="classpath">
		<fileset dir="${lib.dir}">
			<include name="**/*.jar" />
		</fileset>
		<fileset dir="${jar.dir}">
			<include name="*.jar" />
		</fileset>
    </path>


	<target name="clean" description="Tidy up the workspace">
		<delete failonerror="false" dir="${build.dir}" />
		<delete failonerror="false" dir="ivy-report" />
		<delete failonerror="false" dir="${doc.dir}"/>
		<delete>
			<fileset defaultexcludes="no" dir="${src.dir}" includes="**/*~"/>
		</delete>
	</target>

	<target name="init" depends="clean" description="Setup project directories">
        <mkdir dir="${classes.dir}"/>
        <mkdir dir="${jar.dir}" />
		<mkdir dir="${doc.dir}"/>
	</target>

    <target name="compile" depends="init, ivy-retrieve" description="Compile java sources">
        <javac srcdir="${src.dir}" destdir="${classes.dir}" classpathref="classpath"/>
    </target>
    
    <target name="jar" depends="compile" description="Create .jar file">
        <mkdir dir="${jar.dir}"/>
        <jar destfile="${jar.dir}/${ant.project.name}.jar" basedir="${classes.dir}">
            <manifest>
                <attribute name="Main-Class" value="${main-class}"/>
            </manifest>
        </jar>
    </target>

    <target name="run" depends="jar" description="Run .jar file of the project">
        <java fork="true" classname="${main-class}">
            <classpath>
                <path refid="classpath"/>
                <path location="${jar.dir}/${ant.project.name}.jar"/>
            </classpath>
        </java>
    </target>  

    <target name="main" depends="compile" description="Clean and Compile"/>
    
    <target name="doc" depends="init" description="Generate documentation JavaDoc">
        <javadoc sourcepath="${src.dir}" destdir="${doc.dir}">
			<bottom><![CDATA[<i>Copyright &#169; 2016 Dummy Corp. All Rights Reserved.</i>]]></bottom>
			<!-- Custom tags -->
			<tag name="todo." scope="all" description="To do:"/>
			<classpath>
				<fileset dir="${lib.dir}">
					<include name="*.jar"/>
				</fileset>
			</classpath>
	    </javadoc>  
    </target>    
    
	<!-- IVY TARGETS -->
	<target name="ivy-report">
		<ivy:configure override="true" file="${ivy.install.dir}/ivy-settings.xml" />
		<mkdir dir="ivy-report" />
		<ivy:resolve file="${ivy.dep.file}" haltonfailure="false" />
		<ivy:report todir="ivy-report" />
	</target>

	<target name="ivy-retrieve">
		<ivy:configure override="true" file="${ivy.install.dir}/ivy-settings.xml" />
		<ivy:retrieve sync="true" conf="*" type="jar,bundle" pattern="${lib.dir}/[artifact]-[revision].[ext]" />
	</target>

	<target name="ivy-retrieve-runtime">
		<ivy:configure override="true" file="${ivy.install.dir}/ivy-settings.xml" />
		<ivy:retrieve sync="true" conf="runtime" type="jar,bundle" pattern="build/lib-runtime/[artifact]-[revision].[ext]" />
	</target>

	<target name="ivy-retrieve-jar">
		<ivy:configure override="true" file="${ivy.install.dir}/ivy-settings.xml" />
		<ivy:retrieve sync="true" type="jar,bundle" pattern="build/lib/[artifact].[ext]" conf="provided" />
	</target>

	<target name="ivy-release" depends="ivy-retrieve">
		<ivy:configure override="true" file="${ivy.install.dir}/ivy-settings.xml" />
		<fail message="No ivy resolver selected" unless="ivy.resolver" />
		<ivy:publish artifactspattern="${basedir}/${dir.publish}/[artifact]-[revision].[ext]" resolver="${ivy.resolver}" pubrevision="${version}" status="release" overwrite="true" />
	</target>

	<target name="ivy-cleancache">
		<ivy:cleancache />
	</target>

   
   <!--CONFIGURAZIONE DI IVY PER LE DIPENDENZE -->
   
   
   
   
   

</project>
